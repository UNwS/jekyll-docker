#!/bin/bash
# Vipin Madhavanunni <vipmadha@gmail.com>

this=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 16 | head -n 1)

exit_fuc() { sudo rm -rf /tmp/gh-pages-$this; sudo rm -f docker-compose-$this.yml; }
trap exit_fuc 0

docker_gen_file() { cat > docker-compose-$this.yml << EOL
web:  
  image: unws/gh-pages:$tag
  volumes:
    - /tmp/gh-pages-$this:/html
  ports:
    - "$port:$port"
EOL
}

docker_run() { mkdir /tmp/gh-pages-$this ; sudo docker-compose pull; sudo docker-compose -f docker-compose-$this.yml run web -s $web; }

usage() { echo "$0 usage:" && grep " .)\ #" $0; exit 0; }
post_limit=0
tag="stable"
port="4000"

[ $# -eq 0 ] && usage
while getopts ":hd:s:n:r:t:p:" arg; do
  case $arg in
    p) # Jekyll port
      port=${OPTARG}
      ;;
    t) # docker image tag
      tag=${OPTARG}
      ;;
    d) # default source, used internal.
      default_src=${OPTARG}
      ;;
    n) # number of post limit for generatation.
      post_limit=${OPTARG}
      ;;
    s) # git source utl for the site.
      page=${OPTARG}
      ;;
    r) # run the docker-compose with url.
      web=${OPTARG}
      docker_gen_file
      docker_run
      exit $?            
      ;;
    h | *) # Display help.
      usage
      exit 0
      ;;
  esac
done

if [ -z $page ]; then
  git clone $default_src .
  git submodule update --init --recursive
else
  git clone $page .
  git submodule update --init --recursive
fi

if [[ "$post_limit" -gt 0 ]]; then
  echo -e "\033[1;33m[WARN] Telling jekyll to only generate the last $post_limit posts. \033[0m"
  if [ -f build ]; then
    ./build -r
  else
    bundle exec jekyll serve --limit_posts "$post_limit"
  fi
else
  if [ -f build ]; then
    ./build -r
  else
    bundle exec jekyll serve
  fi
fi
